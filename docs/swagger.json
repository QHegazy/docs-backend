{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Testing Swagger APIs.",
        "title": "Docs APIs",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "mohamed__hegazy@outlook.com"
        },
        "license": {
            "name": "MIT License",
            "url": "https://github.com/aws/mit-0"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/v1",
    "paths": {
        "/doc": {
            "get": {
                "description": "Fetches all documents in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Document"
                ],
                "summary": "Retrieves all documents",
                "responses": {
                    "200": {
                        "description": "Documents retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Takes in document data and creates a new document",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Document"
                ],
                "summary": "Creates a new document",
                "parameters": [
                    {
                        "description": "Document Post Data",
                        "name": "docPost",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DocPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.DocPost": {
            "type": "object",
            "required": [
                "name",
                "user_uuid"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "user_uuid": {
                    "type": "string"
                }
            }
        },
        "response.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "description": "Corrected tag",
                    "type": "integer"
                }
            }
        },
        "response.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "description": "Corrected tag",
                    "type": "integer"
                }
            }
        }
    }
}